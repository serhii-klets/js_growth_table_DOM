{"version":3,"sources":["scripts/main.js"],"names":["container","document","querySelector","table","buttonAppendRow","buttonAppendColumn","buttonRemoveRow","buttonRemoveColumn","maxRows","maxColumns","minRows","minColumns","addEventListener","e","target","tagName","toLowerCase","trArr","querySelectorAll","countOfRows","length","countOfColumns","children","classList","disabled","tr","createElement","i","append","remove","map","el","pop"],"mappings":";AAAA,aAeA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAZA,IAAMA,EAAYC,SAASC,cAAc,cACnCC,EAAQH,EAAUE,cAAc,UAEhCE,EAAkBJ,EAAUE,cAAc,eAC1CG,EAAqBL,EAAUE,cAAc,kBAC7CI,EAAkBN,EAAUE,cAAc,eAC1CK,EAAqBP,EAAUE,cAAc,kBAC7CM,EAAU,GACVC,EAAa,GACbC,EAAU,EACVC,EAAa,EAEnBX,EAAUY,iBAAiB,QAAS,SAACC,GAC/BA,GAAmC,WAAnCA,EAAEC,OAAOC,QAAQC,cAA4B,CACzCC,IAAAA,EAAYd,EAAAA,EAAMe,iBAAiB,OACrCC,EAAcF,EAAMG,OACpBC,EAAiB,EAAIJ,EAAM,GAAGK,UAAUF,OAEpCP,OAAAA,EAAEC,OAAOS,UAAU,IACpB,IAAA,aAKCJ,GAJAb,EAAgBkB,WAClBlB,EAAgBkB,SAAW,IAGzBL,EAAcX,EAAS,CAGpB,IAFCiB,IAAAA,EAAKxB,SAASyB,cAAc,MAEzBC,EAAI,EAAGA,EAAIN,EAAgBM,IAClCF,EAAGG,OAAO3B,SAASyB,cAAc,SAEnCP,IAEoBX,IAClBJ,EAAgBoB,SAAW,YAE7BrB,EAAMyB,OAAOH,GAEf,MACG,IAAA,aACCrB,EAAgBoB,WAClBpB,EAAgBoB,SAAW,IAGzBL,EAAcT,IAChBO,EAAMA,EAAMG,OAAS,GAAGS,WACxBV,IAEoBT,IAClBJ,EAAgBkB,SAAW,aAG/B,MACG,IAAA,gBACCjB,EAAmBiB,WACrBjB,EAAmBiB,SAAW,IAG5BH,EAAiBZ,IACnBQ,EAAMa,IAAI,SAAAC,GAAMA,OAAAA,EAAGH,OAAO3B,SAASyB,cAAc,WACjDL,IAEuBZ,IACrBJ,EAAmBmB,SAAW,aAGlC,MACG,IAAA,gBACCnB,EAAmBmB,WACrBnB,EAAmBmB,SAAW,IAGhCP,EAAMa,IAAI,SAAAC,GACO,EAAIA,EAAGT,UAAUU,MAEzBH,aAGTR,IAEuBV,IACrBJ,EAAmBiB,SAAW","file":"main.26f300fc.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\n// write code here\nconst container = document.querySelector('.container');\nconst table = container.querySelector('.field');\n\nconst buttonAppendRow = container.querySelector('.append-row');\nconst buttonAppendColumn = container.querySelector('.append-column');\nconst buttonRemoveRow = container.querySelector('.remove-row');\nconst buttonRemoveColumn = container.querySelector('.remove-column');\nconst maxRows = 10;\nconst maxColumns = 10;\nconst minRows = 2;\nconst minColumns = 2;\n\ncontainer.addEventListener('click', (e) => {\n  if (e.target.tagName.toLowerCase() === 'button') {\n    const trArr = [...table.querySelectorAll('tr')];\n    let countOfRows = trArr.length;\n    let countOfColumns = [...trArr[0].children].length;\n\n    switch (e.target.classList[0]) {\n      case 'append-row':\n        if (buttonRemoveRow.disabled) {\n          buttonRemoveRow.disabled = '';\n        }\n\n        if (countOfRows < maxRows) {\n          const tr = document.createElement('tr');\n\n          for (let i = 0; i < countOfColumns; i++) {\n            tr.append(document.createElement('td'));\n          }\n          countOfRows++;\n\n          if (countOfRows === maxRows) {\n            buttonAppendRow.disabled = 'disabled';\n          }\n          table.append(tr);\n        }\n        break;\n      case 'remove-row':\n        if (buttonAppendRow.disabled) {\n          buttonAppendRow.disabled = '';\n        }\n\n        if (countOfRows > minRows) {\n          trArr[trArr.length - 1].remove();\n          countOfRows--;\n\n          if (countOfRows === minRows) {\n            buttonRemoveRow.disabled = 'disabled';\n          }\n        }\n        break;\n      case 'append-column':\n        if (buttonRemoveColumn.disabled) {\n          buttonRemoveColumn.disabled = '';\n        }\n\n        if (countOfColumns < maxColumns) {\n          trArr.map(el => el.append(document.createElement('td')));\n          countOfColumns++;\n\n          if (countOfColumns === maxColumns) {\n            buttonAppendColumn.disabled = 'disabled';\n          }\n        }\n        break;\n      case 'remove-column':\n        if (buttonAppendColumn.disabled) {\n          buttonAppendColumn.disabled = '';\n        }\n\n        trArr.map(el => {\n          const tdLast = [...el.children].pop();\n\n          tdLast.remove();\n        });\n\n        countOfColumns--;\n\n        if (countOfColumns === minColumns) {\n          buttonRemoveColumn.disabled = 'disabled';\n        }\n        break;\n    }\n  }\n});\n"]}